{"version":3,"sources":["d3-scatter/d3-start-finish.js"],"names":["margin","width","height","svg","d3","select","append","attr","xPositionScale","scaleLinear","domain","range","yPositionScale","colorScale","scaleOrdinal","csv","then","ready","datapoints","console","log","selectAll","data","join","d","gdp_per_capita","life_expectancy","continent","filter","country","raise","legend","continents","i","text","style","yAxis","axisLeft","call","xAxis","axisBottom"],"mappings":";CAAA,WAEQA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GAEjDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAG5BG,EAAMC,GAAGC,OAAO,UAAUC,OAAO,OAClCC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAKjEQ,EAAiBJ,GAAGK,cACvBC,OAAO,CAAC,EAAG,MACXC,MAAM,CAAC,EAAGV,IAEPW,EAAiBR,GAAGK,cACvBC,OAAO,CAAC,GAAI,KACZC,MAAM,CAACT,EAAQ,IAEZW,EAAaT,GAAGU,eACnBH,MAAM,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,YAIhFP,GAAGW,IAAI,iBACJC,KAEMC,SAAOC,GACdC,QAAQC,IAAI,gBACZD,QAAQC,IAAIF,GAQZf,EAAIkB,UAAU,UACXC,KAAKJ,GACLK,KAAK,UACLhB,KAAK,IAAK,GACVA,KAAK,KAAM,SAAAiB,GAAKhB,OAAAA,EAAegB,EAAEC,kBACjClB,KAAK,KAAM,SAAAiB,GAAKZ,OAAAA,EAAeY,EAAEE,mBACjCnB,KAAK,OAAQ,SAAAiB,GAAKX,OAAAA,EAAWW,EAAEG,aAQlCxB,EAAIkB,UAAU,UACXO,OAAO,SAAAJ,GAAKA,MAAc,cAAdA,EAAEK,SAAyC,UAAdL,EAAEK,UAC3CtB,KAAK,SAAU,SACfuB,QAMGC,IAAAA,EAAS5B,EAAIG,OAAO,KACvBC,KAAK,YAAa,sBAKfyB,EAAanB,EAAWH,SAM9BqB,EAAOV,UAAU,QACdC,KAAKU,GACLT,KAAK,QACLhB,KAAK,QAAS,IACdA,KAAK,SAAU,IACfA,KAAK,IAAK,GACVA,KAAK,IAAK,SAACiB,EAAGS,GAAMA,OAAI,GAAJA,IACpB1B,KAAK,OAAQ,SAAAiB,GAAKX,OAAAA,EAAWW,KAGhCO,EAAOV,UAAU,QACdC,KAAKU,GACLT,KAAK,QACLhB,KAAK,IAAK,GACVA,KAAK,IAAK,SAACiB,EAAGS,GAAMA,OAAI,GAAJA,IACpBC,KAAK,SAAAV,GAAKA,OAAAA,IACVjB,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,YAAa,IAGrBH,GAAGiB,UAAU,cACVc,MAAM,mBAAoBtB,EAAW,SAExCT,GAAGiB,UAAU,iBACVc,MAAM,mBAAoBtB,EAAW,YAGxCV,EAAIG,OAAO,QACR4B,KAAK,SACL3B,KAAK,KAAM,GACXA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,cAAe,OAEnB6B,IAAAA,EAAQhC,GAAGiC,SAASzB,GACxBT,EAAIG,OAAO,KACRC,KAAK,QAAS,eACd+B,KAAKF,GAEJG,IAAAA,EAAQnC,GAAGoC,WAAWhC,GAC1BL,EAAIG,OAAO,KACRC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5CoC,KAAKC,KA1HZ","file":"d3-start-finish.0fdc3509.js","sourceRoot":"../content","sourcesContent":["(function () {\n\n  const margin = { top: 40, right: 30, bottom: 20, left: 40 }\n\n  const width = 400 - margin.left - margin.right\n  const height = 500 - margin.top - margin.bottom\n\n  // You'll probably need to edit this one\n  const svg = d3.select(\"#chart\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n  // i'll give you between 0-50k\n  // you give back between 0-width (left hand side\n  // to the right hand side)\n  const xPositionScale = d3.scaleLinear()\n    .domain([0, 70000])\n    .range([0, width])\n\n  const yPositionScale = d3.scaleLinear()\n    .domain([30, 85])\n    .range([height, 0])\n\n  const colorScale = d3.scaleOrdinal()\n    .range(['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae','#f1e2cc','#cccccc'])\n\n  // hey d3! read in countries.csv\n  // and when you're done, go run 'ready'\n  d3.csv(\"countries.csv\")\n    .then(ready)\n\n  function ready (datapoints) {\n    console.log(\"I'm here!!!!\")\n    console.log(datapoints)\n\n    // add one circle to the \n    // svg for each datapoint\n\n    // grab all circles inside of the svg\n    // attach the datapoints to the circles\n    // make sure we have the right num of circles\n    svg.selectAll('circle')\n      .data(datapoints)\n      .join('circle')\n      .attr('r', 5)\n      .attr('cx', d => xPositionScale(d.gdp_per_capita))\n      .attr('cy', d => yPositionScale(d.life_expectancy))\n      .attr('fill', d => colorScale(d.continent))\n\n    // now that we've drawn all the circles,\n    // they have data associatd with them already\n    // grab all the circles, but we only want \n    // the ones that are argentina or japan!\n    // then give them a black stroke and raise them\n    // up above all of the other circles\n    svg.selectAll('circle')\n      .filter(d => d.country === 'Argentina' || d.country === 'Japan')\n      .attr('stroke', 'black')\n      .raise()\n\n    // put a g tag inside of the svg\n    // it's just a group of stuff!!!\n    // we can move the stuff in it\n    // all at once!\n    const legend = svg.append('g')\n      .attr(\"transform\", \"translate(250,300)\")\n\n    // we can get a list of continents\n    // from the color scale, since it knows\n    // what the continents are now\n    const continents = colorScale.domain()\n\n    // Add a rectangle for every continent\n    // 'Asia', 'Africa', 'Oceania'\n    // colorScale('Asia')\n    // colorScale('Africa')\n    legend.selectAll('rect')\n      .data(continents)\n      .join('rect')\n      .attr('width', 40)\n      .attr('height', 15)\n      .attr('x', 0)\n      .attr('y', (d, i) => i * 20)\n      .attr('fill', d => colorScale(d))\n\n    // add a text element for every continent\n    legend.selectAll('text')\n      .data(continents)\n      .join('text')\n      .attr('x', 0)\n      .attr('y', (d, i) => i * 20)\n      .text(d => d)\n      .attr('dy', 12)\n      .attr('dx', 43)\n      .attr('font-size', 12)\n  \n    // .asia-text { background-color: #whatever }\n    d3.selectAll(\".asia-text\")\n      .style(\"background-color\", colorScale(\"Asia\"))\n    \n    d3.selectAll(\".oceania-text\")\n      .style(\"background-color\", colorScale(\"Oceania\"))\n    \n    // Manually add a single text element that says 'years'\n    svg.append(\"text\")\n      .text(\"years\")\n      .attr(\"x\", -8)\n      .attr(\"y\", 13)\n      .attr('font-size', 10)\n      .attr('text-anchor', 'end')\n\n    var yAxis = d3.axisLeft(yPositionScale);\n    svg.append(\"g\")\n      .attr(\"class\", \"axis y-axis\")\n      .call(yAxis)\n\n    var xAxis = d3.axisBottom(xPositionScale)\n    svg.append(\"g\")\n      .attr(\"class\", \"axis x-axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    }\n\n})();"]}